{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yuvat\\\\Desktop\\\\robofriends\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox'; // import {Robots} from './Robots';\n\nimport './App.css'; //import { render } from '@testing-library/react';\n// import { render } from '@testing-library/react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [Robots, setRobots] = useState([]);\n  const [search, setSearch] = useState('');\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => setRobots(users));\n  }, []);\n\n  const onSearchChange = event => {\n    setSearch(event.target.value);\n  }; //change robots according to search field\n\n\n  const filteredRobots = Robots.filter(Robots => {\n    return Robots.name.toLowerCase().includes(search.toLowerCase());\n  });\n  return !Robots.length ? /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \" Loading\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tc\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"f1\",\n      children: \" Robofriends\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      SearchChange: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      Robots: filteredRobots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"jGWFgLubsPtsCa/yLpJ5L3af+mE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/yuvat/Desktop/robofriends/src/App.js"],"names":["React","Component","CardList","SearchBox","App","Robots","setRobots","useState","search","setSearch","useEffect","fetch","then","response","json","users","onSearchChange","event","target","value","filteredRobots","filter","name","toLowerCase","includes","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,OAAO,WAAP,C,CAEA;AAEA;;;;AAEA,MAAMC,GAAG,GAAG,MAAO;AAAA;;AACf,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC,EAAD,CAApC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOG,KAAD,IAAWT,SAAS,CAACS,KAAD,CAF1B;AAGD,GAJQ,EAIN,EAJM,CAAT;;AAMA,QAAMC,cAAc,GAAIC,KAAD,IAAW;AAChCR,IAAAA,SAAS,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACD,GAFD,CAVe,CAcf;;;AACA,QAAMC,cAAc,GAAGf,MAAM,CAACgB,MAAP,CAAehB,MAAD,IAAY;AAC7C,WAAOA,MAAM,CAACiB,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmChB,MAAM,CAACe,WAAP,EAAnC,CAAP;AACH,GAFsB,CAAvB;AAIA,SAAO,CAAClB,MAAM,CAACoB,MAAR,gBACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADG,gBAGH;AAAK,IAAA,SAAS,EAAC,IAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,YAAY,EAAGT;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,MAAM,EAAII;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAHJ;AASH,CA5BD;;GAAMhB,G;;KAAAA,G;AA+BN,eAAeA,GAAf","sourcesContent":["import React, { Component}  from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\n// import {Robots} from './Robots';\nimport './App.css';\n\n//import { render } from '@testing-library/react';\n\n// import { render } from '@testing-library/react';\n\nconst App = () =>  {\n    const [Robots, setRobots] = useState([]);\n    const [search, setSearch] = useState('');\n  \n    useEffect(() => {\n      fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => setRobots(users));\n    }, []);\n   \n    const onSearchChange = (event) => {\n      setSearch(event.target.value);\n    };\n  \n    //change robots according to search field\n    const filteredRobots = Robots.filter((Robots) => {\n        return Robots.name.toLowerCase().includes(search.toLowerCase());\n    });\n\n    return !Robots.length ? (\n        <h1> Loading</h1>\n    ) : (\n        <div className=\"tc\">\n            <h1 className=\"f1\"> Robofriends</h1>\n            <SearchBox SearchChange ={onSearchChange} />\n            <CardList Robots = {filteredRobots} />\n        </div>\n    );\n}\n  \n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}