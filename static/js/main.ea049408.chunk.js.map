{"version":3,"sources":["components/Card.js","components/CardList.js","components/Scroll.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","map","user","i","Scroll","props","style","overflowY","border","height","children","SearchBox","SearchChange","type","placeholder","onChange","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","useState","setRobots","search","setSearch","useEffect","fetch","then","response","json","users","filteredRobots","filter","toLowerCase","includes","length","event","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"6MAgBeA,EAdF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAW,mDAAhB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCiBHK,EAvBA,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEf,OACI,8BACKA,EAAOC,KAAI,SAACC,EAAMC,GACf,OACI,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCDVC,EARD,SAACC,GACX,OACI,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,YCWJC,EAdG,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,aACjB,OACI,qBAAKhB,UAAU,MAAf,SACI,uBACIA,UAAU,kCACViB,KAAK,SACLC,YAAY,gBACZC,SAAUH,O,4BCcXI,E,kDAnBX,WAAYX,GAAQ,IAAD,8BACf,cAAOA,IACFY,MAAM,CACPC,UAAS,GAHE,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG7B,WACI,OAAGG,KAAKJ,MAAMC,SACH,2DAEJG,KAAKhB,MAAMK,a,GAhBEa,aC+CbC,G,MArCH,WAAQ,IAAD,EACaC,mBAAS,IADtB,mBACRzB,EADQ,KACA0B,EADA,OAEaD,mBAAS,IAFtB,mBAERE,EAFQ,KAEAC,EAFA,KAIfC,qBAAU,WACRC,MAAM,8CACLC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAWR,EAAUQ,QAC1B,IAEH,IAKMC,EAAiBnC,EAAOoC,QAAO,SAACpC,GAClC,OAAOA,EAAOP,KAAK4C,cAAcC,SAASX,EAAOU,kBAGrD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWgB,aAdI,SAAC4B,GACtBZ,EAAUY,EAAMC,OAAOC,UAcjB,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU1C,OAAUmC,WAPhC,4CCpBOQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAE,EAAF,IAEAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.ea049408.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n \r\n    return(\r\n        <div className= ' tc bg-light-green dib pa3 ma2 grow bw2 shadow-5' >\r\n            <img alt='Robots' src={`https://robohash.org/${id}?200x200`}  />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}; \r\n\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({Robots}) => {\r\n  \r\n    return (\r\n        <div>\r\n            {Robots.map((user, i) => {\r\n                return(\r\n                    <Card\r\n                    key={i}\r\n                    id={Robots[i].id}\r\n                    name={Robots[i].name}\r\n                    email={Robots[i].email}\r\n                    />\r\n                );\r\n            }\r\n\r\n            )\r\n            \r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport  default  CardList;","import React from 'react';\r\nconst Scroll =(props) => {\r\n    return(\r\n        <div style= {{overflowY: 'scroll', border:'5px solid black', height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll; \r\n","import React from 'react';\r\nconst SearchBox = ({ SearchChange }) =>{\r\n    return(\r\n        <div className=\"pa2\">\r\n            <input \r\n                className='pa3 ba b--green bg-lighest-blue'\r\n                type=\"search\" \r\n                placeholder=\"search Robots\"\r\n                onChange={SearchChange}\r\n            />\r\n        </div>\r\n       \r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props) {\r\n        super (props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError) {\r\n            return <h1> Ooops. That is not good.</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { useState, useEffect}  from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from '../components/Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n// import {Robots} from './Robots';\r\nimport './App.css';\r\n\r\n//import { render } from '@testing-library/react';\r\n\r\n// import { render } from '@testing-library/react';\r\n\r\nconst App = () =>  {\r\n    const [Robots, setRobots] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n  \r\n    useEffect(() => {\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n      .then((response) => response.json())\r\n      .then((users) => setRobots(users));\r\n    }, []);\r\n   \r\n    const onSearchChange = (event) => {\r\n      setSearch(event.target.value);\r\n    };\r\n  \r\n    //change robots according to search field\r\n    const filteredRobots = Robots.filter((Robots) => {\r\n        return Robots.name.toLowerCase().includes(search.toLowerCase());\r\n    });\r\n\r\n    return !Robots.length ? (\r\n        <h1> Loading</h1>\r\n    ) : (\r\n        <div className=\"tc\">\r\n            <h1 className=\"f1\"> Robofriends</h1>\r\n            <SearchBox SearchChange ={onSearchChange} />\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList Robots = {filteredRobots} />\r\n                </ErrorBoundary>\r\n                \r\n            </Scroll>\r\n            \r\n        </div>\r\n    );\r\n}\r\n  \r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  < App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}